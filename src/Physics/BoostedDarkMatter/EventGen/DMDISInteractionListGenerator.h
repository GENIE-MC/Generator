//____________________________________________________________________________
/*!

\class    genie::DMDISInteractionListGenerator

\brief    Concrete implementations of the InteractionListGeneratorI interface.
          Generate a list of all the Interaction (= event summary) objects that
          can be generated by the DMDIS EventGenerator.

\author   Joshua Berger <jberger \at physics.wisc.edu
          University of Wisconsin-Madison
          Costas Andreopoulos <constantinos.andreopoulos \at cern.ch>
          University of Liverpool & STFC Rutherford Appleton Laboratory

\created  September 1, 2017

\cpright  Copyright (c) 2003-2020, The GENIE Collaboration
          For the full text of the license visit http://copyright.genie-mc.org
          
*/
//____________________________________________________________________________

#ifndef _DMDIS_INTERACTION_LIST_GENERATOR_H_
#define _DMDIS_INTERACTION_LIST_GENERATOR_H_

#include <map>

#include "Framework/EventGen/InteractionListGeneratorI.h"

using std::multimap;

namespace genie {

class Interaction;

class DMDISInteractionListGenerator : public InteractionListGeneratorI {

public :
  DMDISInteractionListGenerator();
  DMDISInteractionListGenerator(string config);
 ~DMDISInteractionListGenerator();

  // implement the InteractionListGeneratorI interface
  InteractionList * CreateInteractionList(const InitialState & init) const;

  // overload the Algorithm::Configure() methods to load private data
  // members from configuration options
  void Configure(const Registry & config);
  void Configure(string config);

private:

  void LoadConfigData(void);

  multimap<int,bool> GetHitQuarks(const Interaction * interaction) const;

  bool fIsDM;
  bool fSetHitQuark;
  bool fIsCharm;
};

}      // genie namespace

#endif // _DMDIS_INTERACTION_LIST_GENERATOR_H_
